version: '3.8'

services:
  llm-gateway:
    build:
      context: ..
      dockerfile: deployments/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - DEBUG=false
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
      - APP_VERSION=1.0.0
      - REDIS_URL=redis://redis:6379/0
      - RATE_LIMIT_STORAGE=redis
      - PROMETHEUS_ENABLED=true
      - LANGFUSE_ENABLED=false
    env_file:
      - ../.env
    depends_on:
      - redis
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - llm-network
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
      replicas: 3  # Enable multiple replicas for load balancing

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: always
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      - llm-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy with load balancing
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - llm-gateway
    restart: always
    networks:
      - llm-network
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

volumes:
  redis_data:

networks:
  llm-network:
    driver: bridge 